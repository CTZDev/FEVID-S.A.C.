---
import HeaderSection from "../HeaderSection.astro";
import Input from "../../Input.astro";
import TextArea from "../../TextArea.astro";
import HeaderContact from "./HeaderContact.astro";
import Button from "../../Button.astro";
---

<section class="contact-main" id="contact-us">
  <HeaderSection
    title="¿Cómo contactarnos?"
    contentText=`"Ingresa tu solicitud y procederemos a brindarle más detalles del catálogo de nuestros productos"`
  />

  <div
    class="bg-white rounded-lg shadow-2xl px-6 py-8 max-w-[768px] m-auto flex flex-col gap-6 lg:max-w-[1024px] lg:px-12 lg:py-12 mb-32">
    <HeaderContact
      title="RELLENA EL FORMULARIO"
      text=`“Una vez que tu mensaje sea enviado, será recibido con prioridad por
            nuestro equipo. Te aseguramos una respuesta, en el menor tiempo
            posible.”`
    />

    <form
      action="https://formsubmit.co/ventas@fevidsac.com"
      method="POST"
      target="_blank"
      id="form-contact"
      class="text-sm md:text-base lg:text-lg flex flex-col gap-4">
      <div class="form-control">
        <Input
          label="Nombres completos"
          key="fullName"
          type="text"
          title="Nombre solo acepta letras y espacios en blanco"
          placeholder="Ingrese sus nombres completos"
          pattern="^[A-Za-zÑñÁáÉéÍíÓóÚúÜü\\s]+$"
          isRequired
        />
      </div>

      <div class="form-control">
        <Input
          label="Razón Social"
          key="companyName"
          type="text"
          title="Razón social solo acepta caracteres alfanuméricos y espacios en blanco"
          placeholder="Ingrese su Razón Social"
          pattern="^[A-Za-zÑñÁáÉéÍíÓóÚúÜü0-9\\s]+$"
          isRequired={false}
        />
      </div>

      <div class="form-control">
        <Input
          label="RUC"
          key="ruc"
          type="number"
          title="RUC solo acepta valores numéricos de 11 caracteres"
          placeholder="Ingrese el RUC de su organización"
          pattern="^[0-9]{11}$"
          isRequired={false}
        />
      </div>

      <div class="form-control">
        <Input
          label="Teléfono o celular"
          key="phone"
          type="number"
          title="Teléfono o celular puede tener como mínimo 6 y máximo 9 caracteres"
          placeholder="Ingrese su número de teléfono o celular"
          pattern="^[0-9]{6}$|^[0-9]{9}$"
          isRequired
        />
      </div>

      <div class="form-control">
        <Input
          label="Correo electrónico"
          key="email"
          type="email"
          title="Email inválido. Porfavor ingrese correctamente su Email"
          placeholder="Ingrese su correo electrónico"
          pattern="^[a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,15})$"
        />
      </div>

      <div class="form-control">
        <TextArea
          label="Mensaje"
          key="send"
          title="Mensaje incorrecto, solo puedo mandar un mensaje con máximo de 1500 caracteres"
          placeholder="Ingrese los productos que necesitas cotizar y obtener información"
          dataPattern="^.{1,1500}$"
        />
      </div>

      <Button src="/send.svg" alt="Send form" slot="text-content">
        <span slot="text-content">Enviar formulario</span>
      </Button>

      <!-- Properties of the formsubmit.co -->
      <input type="hidden" name="_next" value="https://fevidsac.com/respuesta-contactar/" />
      <input type="hidden" name="_subject" value="Información del catálogo de productos" />
      <input type="hidden" name="_captcha" value="false" />
      <input type="hidden" name="_template" value="table" />
      <input type="hidden" name="_cc" value="fevidsac@hotmail.com; fevidsac@gmail.com" />
      <div class="loader hidden"></div>
    </form>
  </div>
</section>

<style>
  .is-error {
    padding: 1.5rem 0;
    background-color: rgba(239, 68, 68, 0.9);
    font-weight: bold;
    color: white;
    display: block;
    border-radius: 0 0 0.5rem 0.5rem;
    font-size: 1.125rem;
  }

  .loader {
    width: 48px;
    height: 48px;
    margin: 2rem auto;
    position: relative;
  }

  .loader:before {
    content: "";
    width: 48px;
    height: 5px;
    background: #ffd9a1;
    position: absolute;
    top: 60px;
    left: 0;
    border-radius: 50%;
    animation: shadow324 0.5s linear infinite;
  }

  .loader:after {
    content: "";
    width: 100%;
    height: 100%;
    background: #ffbf60;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 4px;
    animation: jump7456 0.5s linear infinite;
  }

  @keyframes jump7456 {
    15% {
      border-bottom-right-radius: 3px;
    }

    25% {
      transform: translateY(9px) rotate(22.5deg);
    }

    50% {
      transform: translateY(18px) scale(1, 0.9) rotate(45deg);
      border-bottom-right-radius: 40px;
    }

    75% {
      transform: translateY(9px) rotate(67.5deg);
    }

    100% {
      transform: translateY(0) rotate(90deg);
    }
  }

  @keyframes shadow324 {
    0%,
    100% {
      transform: scale(1, 1);
    }

    50% {
      transform: scale(1.2, 1);
    }
  }
</style>

<script>
  import ScrollReveal from "scrollreveal";

  ScrollReveal().reveal(".contact-main", {
    distance: "500px",
    duration: 900,
    easing: "ease-in-out",
  });

  // Create message Error
  const $formContact = document.getElementById("form-contact") as HTMLFormElement;
  const $inputs = $formContact.querySelectorAll(".form-control [title]");

  $inputs.forEach((input) => {
    const $span = document.createElement("span");
    $span.textContent = (input as HTMLElement).title;
    $span.classList.add(
      "opacity-0",
      "invisible",
      "max-h-0",
      "py-1.5",
      "bg-red-500/90",
      "font-bold",
      "text-white",
      "block",
      "rounded-b-lg",
      "text-base",
      "transition-all",
      "ease-in-out",
      "duration-300"
    );
    input instanceof HTMLTextAreaElement && $span.classList.add("-mt-2");
    input.insertAdjacentElement("afterend", $span);
  });

  document.addEventListener("keyup", (e) => {
    const isEvent = e.target instanceof Element;

    if (isEvent && e.target.matches(".form-control [title]")) {
      let pattern = "";
      if (e.target instanceof HTMLInputElement) {
        pattern = e.target.pattern;
      } else {
        pattern = (e.target as HTMLTextAreaElement).dataset.pattern || "";
      }

      const regex = new RegExp(pattern);
      const value = (e.target as HTMLInputElement | HTMLTextAreaElement).value;

      if (value !== "") {
        return regex.test(value)
          ? e.target.nextElementSibling?.classList.add("opacity-0", "invisible", "max-h-0")
          : e.target.nextElementSibling?.classList.remove("opacity-0", "invisible", "max-h-0");
      } else {
        e.target.nextElementSibling?.classList.add("opacity-0", "invisible", "max-h-0");
      }
    }
  });

  const $form = document.querySelector(".form-body");
  const $loader = document.querySelector(".loader");

  // Cargar el submit
  $form?.addEventListener("submit", (_) => {
    $loader?.classList.remove("hidden");
    setTimeout(() => {
      $loader?.classList.add("hidden");
      ($form as HTMLFormElement).reset();
    }, 10000);
  });
</script>
