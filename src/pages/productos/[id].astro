---
import Layout from "../../layouts/Layout.astro";
import Input from "../../components/Input.astro";
import Link from "../../components/Link.astro";
import Modal from "../../components/Modal.astro";
import Product from "../../components/Product/Product.astro";
import CardProduct from "../../components/Product/CardProduct.astro";
import ListItemProduct from "../../components/Product/ListItemProduct.astro";
import { getAllProducts, getProductsBy } from "../../services/product";
import Brochure from "../../components/Brochure.astro";
import Banner from "../../components/Banner.astro";

export function getStaticPaths() {
  const getProducts = getAllProducts();
  return getProducts.map(({ id }) => ({
    params: { id },
  }));
}

const { id } = Astro.params;
const products = typeof id === "string" ? getProductsBy({ id }) : null;
---

<Layout
  title=`CATEGOR√çA: ${products?.category.toUpperCase()}`
  description="Los mejores productos industriales nacionales e importados a precios asequibles">
  <div>
    <Product title={`${products?.category.toUpperCase()}`} className="cards-header">
      <div slot="product-content">
        <Input
          label="Buscar especificaci√≥n"
          type="search"
          className="btnSearch"
          placeholder="Buscar por caracter√≠stica del producto..."
          isRequired={false}
        />

        {
          products?.subcategories.map((subcat) => (
            <section class="container-cards">
              <h3 class="cards-title text-xl font-bold border-b-2 pb-1.5 my-5 md:pb-4 md:mt-12 md:text-xl lg:text-4xl">
                üìù {subcat.subcategory}
              </h3>
              <div class="cards mb-6">
                {subcat?.children?.map((child) => (
                  <CardProduct title={child.name} img={child.img} className="card-product">
                    <ul slot="card-details" class="text-gray-600 text-pretty mb-32">
                      {child.listProducts?.map((list) => (
                        <ListItemProduct listDetail={list} />
                      ))}
                      <div class="absolute bottom-4 left-2/4 transform -translate-x-2/4 w-[90%] flex flex-col gap-2">
                        <Link
                          href={`https://wa.me/51923157617?text=Hola, Quisiera obtener mayor informaci√≥n de los siguientes productos: ${child.name.toUpperCase()} de la categor√≠a de ${products.category.toUpperCase()}`}
                          target="_blank"
                          className="link-wsp text-white p-1.5 rounded-lg"
                          src="/whatsApp.svg"
                          alt={`Cotizar la categoria ${child.name} por WhatsApp`}
                          contentText="Cotizar Por WhatsApp"
                        />

                        <Link
                          href={`mailto:fevidsac@gmail.com;fevidsac@hotmail.com;ventas@fevidsac.com?subject=Solicitud%20de%20informaci%C3%B3n%20de%20la%20categor%C3%ADa%20%3A%20${decodeURIComponent(products.category.toUpperCase())}%20&body=Producto%3A%20${decodeURIComponent(child.name)}%20%2F%2F%20Necesito%20Informaci%C3%B3n%20detallada`}
                          className="link-email text-white p-1.5 rounded-lg"
                          target="_blank"
                          src="/email.svg"
                          alt="Icono de Outlook"
                          contentText="Cotizar por Email"
                          onclick="modalLinkPage.showModal()"
                        />
                      </div>
                    </ul>
                  </CardProduct>
                ))}
              </div>
            </section>
          ))
        }
      </div>
    </Product>
    <Modal
      id="modalLinkPage"
      text="Envia detalladamente las especificaciones que requieres de tu producto seleccionado a nuestros correos corporativos"
    />

    <Brochure className="mt-6" />
    <Banner className="my-12 max-w-[90rem] mx-auto" />
  </div>
</Layout>

<style lang="scss">
  .cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
    gap: 1.1rem;
  }

  @media screen and (min-width: 768px) {
    .cards {
      grid-template-columns: repeat(auto-fill, minmax(20.25rem, 1fr));
    }
  }
</style>

<script>
  document.addEventListener("input", (e) => {
    const $cards = Array.from(document.querySelectorAll(".card-product"));
    const isEvent = e.target instanceof Element;

    if (isEvent && e.target.matches(".btnSearch")) {
      const $valueInput = (e.target as HTMLInputElement)?.value.toLowerCase().trim();

      $cards.map(($card) => {
        const $title = $card.querySelector(".card-product-body > h4");
        const titleText = $title?.textContent?.toLowerCase().trim();
        const $containerCards = $card.closest(".cards");
        const $containerGlobalCards = $card.closest(".container-cards");
        const $titleCategory = $containerCards?.previousElementSibling;

        const isMatch = Array.from($card.querySelectorAll(".card-product-body > ul > li")).some(($cardBody) => {
          const bodyText = $cardBody?.textContent?.toLowerCase().trim();
          if ($valueInput !== undefined) return titleText?.includes($valueInput) || bodyText?.includes($valueInput);
        });

        isMatch ? $card.classList.remove("hidden") : $card.classList.add("hidden");

        if ($containerCards) {
          const isAllHidden = Array.from($containerCards.querySelectorAll(".card-product")).every((card_prod) =>
            card_prod.classList.contains("hidden")
          );

          if (isAllHidden) {
            $titleCategory?.classList.add("hidden");
            $containerGlobalCards?.classList.add("hidden");
          } else {
            $titleCategory?.classList.remove("hidden");
            $containerGlobalCards?.classList.remove("hidden");
          }
        }
      });
    }
  });
</script>
